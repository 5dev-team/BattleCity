version: "3.9"
services:
  client:
    container_name: server
    image: server
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: ./DockerFile
      args:
        CLIENT_PORT: ${SERVER_PORT}
    restart: always
    env_file:
      - .env
    networks:
      - awesome
  postgres:
    container_name: postgres
    image: postgres:14
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./sql/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - awesome
  caddy:
    image: caddy:latest
    volumes:
      - './caddy/Caddyfile:/etc/caddy/Caddyfile:ro'
      - './caddy/data:/data'
      - './caddy/config:/config'
    ports:
      - 443:443
    networks:
      - awesome

networks:
  awesome:
    driver: bridge


